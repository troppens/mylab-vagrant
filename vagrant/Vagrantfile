###############################################################################
#
# Do not make any changes below this line
#
###############################################################################

#
# Read nodes configuration
#

# Copy node configuration file from example configuration file, if not exists
if not(File.exists?("../config/nodes.yml"))
  puts "====> Node configuration file not found ('../config/nodes.yml')."
  puts "====> Copy it from example file ('../config/nodes.yml.smp')..."
  FileUtils.cp "../config/nodes.yml.smp", "../config/nodes.yml"
end # if

# Read node configuration file
file = File.read("../config/nodes.yml")
mynodes = YAML.load(file)

#
# Generate RSA key for root ssh between VMs
#
require "openssl"
myfile_id_rsa_root = "../config/id_rsa_root"

# Generate RSA key for root, if not exists
if not(File.exists?(myfile_id_rsa_root))
  puts "====> RSA key for root not found ('#{myfile_id_rsa_root}')."
  puts "====> Generating RSA key for root..."

  # Generate new file with RSA key
  rsa_key_for_root = OpenSSL::PKey::RSA.new(2048)
  File.write(myfile_id_rsa_root, rsa_key_for_root)

end  # if

#
# Configure all VMs
#

Vagrant.configure("2") do |config|

  # Pin CentOS 8 version 1905.1 as OS
  config.vm.box = "centos/8"
  config.vm.box_version = "1905.1"

  # VirtualBox settings for all VMs
  config.vm.provider :virtualbox do |vb|
    # Add all cluster nodes to the same VirtualBox group
    vb.customize ["modifyvm", :id, "--groups", "/mylab"]
  end  # Loop |vb|

  # Synchronize config directory to guests
  config.vm.synced_folder "../config/", "/config", type: "rsync"

  # Configure shared ssh key for root
  config.vm.provision "Configure root ssh between guests", type: "shell",
    inline: """
      chown root:root /config/id_rsa_root
      chmod 400 /config/id_rsa_root
      mkdir -m 700 /root/.ssh
      install -m 600 /config/id_rsa_root /root/.ssh/id_rsa
      ssh-keygen -y -f /root/.ssh/id_rsa > /root/.ssh/id_rsa.pub
      cat /root/.ssh/id_rsa.pub > /root/.ssh/authorized_keys
    """

  # Iterate over nunber of nodes
  (0..mynodes.count-1).each do |node|
    # Define VM
    config.vm.define mynodes[node]["name"] do |node_config|

      # Set hostname in guest OS
      node_config.vm.hostname = mynodes[node]["name"]

      # Set IP address on shared cluster network
      node_config.vm.network "private_network", ip: mynodes[node]["ip"],
        virtualbox__intnet: "mylab"

      # Virtualbox settings for current VM
      node_config.vm.provider :virtualbox do |vb|
        # Set VM name in VirtualBox
        vb.name = mynodes[node]["name"]
      end  # Loop |vb|

      # Run node specific provision script, if exists
      node_provision_script = "../config/provision_#{mynodes[node]}.sh"
      if File.exists?(node_provision_script)
        node_config.vm.provision "Run node provision script (#{node_provision_script})",
          type: "shell", path: node_provision_script
      end  # if

    end  # Loop |node_config|

  end  # Loop |node|

end  # Loop |config|
